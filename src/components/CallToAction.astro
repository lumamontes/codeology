---
import type { CallToAction, Widget } from '~/types';
import Headline from '~/components/Headline.astro';
import Button from './Button.astro';

interface Props extends Widget {
  title?: string;
  subtitle?: string;
  tagline?: string;
  callToAction?: CallToAction;
  actions?: string | CallToAction[];
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  actions = await Astro.slots.render('actions'),
  id,
  classes = {},
} = Astro.props;
---
<section id={id} class={`max-w-full mx-auto ${classes?.container ?? ''} bg-call-to-action`} >
  <div
    class="w-full mx-auto text-center px-6 py-12 rounded-md shadow-xl dark:shadow-none dark:border dark:border-slate-600"
  >
    <Headline
      title={title}
      subtitle={subtitle}
      tagline={tagline}
      classes={{
        container: 'mb-0 md:mb-0',
        title: 'text-xl md:text-3xl font-bold tracking-tighter mb-4 font-heading',
        // subtitle: 'text-xl text-muted dark:text-slate-400',
      }}
    />
    {
      actions && (
        <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4 mt-6">
          {Array.isArray(actions) ? (
            actions.map((action) => (
              <div class="flex w-full sm:w-auto">
                <Button {...(action || {})} class="w-full sm:mb-0" />
              </div>
            ))
          ) : (
            <Fragment set:html={actions} />
          )}
        </div>
      )
    }
  </div>
</section>


<style>
  .bg-call-to-action {
    background-image: url('/bg.png');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  }
</style>